/* 반응형웹 responsive.css */
/* 기존 css에서 변경되는 사항만 작성한다. */
/* media 조건 시작값 nax 기준 사이트너비값 주로 이용 */
@media screen and (max-width:1300px){
    header nav {display: none;}
    main .visual video {width: 1300px;}
    main .creater {width: 100%;}
}/* ~1300 */
@media screen and (max-width:760px){
    header h1 {width: 225.75px;}
    main .creater .img {width: 100%;}
    main .creater .number {width: calc(100% / 2);}
}/* ~760 */
header {
    /* figma 1920(full) 1920px(x) 100%(o) */
    /* width:100%; (block요소의 기본값) */
    /* min-width(320~360), max-width(100%) */
    min-width: 360px;
    height: 80px;
    padding: 0 16px;
    background-color: #000;
    display: flex; flex-flow: row nowrap;/* 아이템(자식)의 정렬 방향 row */
    align-items: center;/* 교차축(수직) 정렬 */
    justify-content: space-between;/* 메인축양쪽끝정렬 */
}
header h1 {
    width: 301px; /* height: 40px; */
    /* img태그가 들어가는 부모요소에 크기 입력 시
    꼭 필요한 경우가 아니면 width, height 둘다 입력하지
    않고 width값만 입력하여 height값은 비율에 맞게 자동으로 
    설정되게 입력한다. ex)height:auto; */
}
header h1 a {}
header h1 a img {
    width: 100%;
    /* img태그는 inline태그여도 원본 이미지 px고유값을
    가지고 있기 때문에 부모의 크기가 변경되도 상대값으로
    따라가지 않는다. */
}
header nav {}
header nav a {
    color: #fff; font-size: 1.25rem;
    margin-right: 24px;
}
header nav a:last-child {margin: 0;}
/* a  상태선택자 : (동적)마우스 올렸을 때 */
header nav a:hover {color:#bbb}
header .snb {
    display: flex;
}
header .snb a:first-child {
    color: #fff; border: 2px solid #fff;
    padding: 0 10px; border-radius: 5px;
    line-height: 39px; margin-right: 24px;
}
header .snb a:last-child {
    width: 36px; 
    /* display: inline-block; 부모가 flex 설정되면 생략 가능 */
}
header .snb a img {width: 100%; filter: invert(1);}
/* snb a 상태선택자 */
header .snb a:first-child:hover {border-color: #ff0;}
header .snb a:last-child:hover img {filter:opacity(50%) opacity(50%);}
/* =================main1. 영상, 시작하기 버튼 위치 */
main {}
main .visual {
    height: 720px; overflow: hidden;
    position: relative;
}
main .visual video {width: 100%;}
main .visual .visual_title {
    position: absolute; left: 0; top:194px; 
    width: 100%; text-align: center;
    /* 겹치는 형제요소 디자인작업을 위한 absolute */
    /* 1. 겹치는 대상에 absolute 설정 후 부모확인을
    위해 left:0; top:0; 초기값 설정(부모의 왼쪽위로 배치) */
    /* 2. 배치된 위치가 원하는 부모 위치가 아닐 때 -> 원하는
    부모 대상에 position 추가 속성을 이요해서 부모설정하기 */
}
main .visual .visual_title h2 {
    font-size: 3rem; font-weight: 700;
    color: #fff; line-height: 1.2;
}
main .visual .visual_title .start_link {
    background-color: #000; color: #fff;
    border-radius: 10px; width: 160px; line-height: 54px;
    display: inline-block;
    margin-top: 97px;
}
main .visual .visual_title .start_link:hover {
    border-radius: 20px;
}
/* ========2. 크리에이터 */
main .creater {
    width:1300px; 
    text-align: center;/* 자식,자손 글자 공통정렬 */
    margin: 0 auto; 
    display: flex; flex-flow: column;
}
main .creater h2 {
    margin:150px 0 53px;
    font-size: 3rem; font-weight: 700;
}
main .creater p {
    font-size: 1.25rem; line-height: 1.5;
}
main .creater .img {}
main .creater .img img {
    /* width: 697px; height: 353px; */
    margin: 55px 0;
    width: 100%;
}
/* =====가입자 수 등등 */
main .creater .number {
    width: 1300px;
    display: flex; justify-content: space-between;
}
main .creater .number p {
    font-size: 1.25rem; 
    line-height: 90px; width: 100%;
}
main .creater .number p:last-child {border: 0;}
main .creater .number p span {
    font-size: 3rem; font-weight: 700;
}
